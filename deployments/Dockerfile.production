# Dockerfile.production

# Build stage
FROM golang:1.23 AS builder

# Set the working directory
WORKDIR /app

# Install Staticcheck
RUN go install honnef.co/go/tools/cmd/staticcheck@latest

# Copy Go modules and dependencies
COPY go.mod go.sum ./
RUN go mod download && go mod tidy && go mod verify

# Copy the rest of the application code
COPY . .

# Run Staticcheck to check the code
RUN staticcheck ./...

# Build the binary
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o main .

# Copy the .env file from the deployments directory
COPY deployments/.env ./

# Runtime stage
FROM debian:bullseye-slim
WORKDIR /app

# Copy the binary from the builder stage
COPY --from=builder /app/main .

# Copy the .env file to the runtime image
COPY --from=builder /app/.env .

# Copy the master_data.json file to the runtime image
COPY internal/resources/master_data.json ./internal/resources/

# Ensure the binary is executable
RUN chmod +x ./main

# Expose port if necessary
EXPOSE 8080

# Run the binary
CMD ["./main"]
