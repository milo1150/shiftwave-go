[request_definition]
# Define the request format
r = sub, obj

[policy_definition]
# Define the policy format
p = sub, obj

[role_definition]
# Define the role inheritance format
# g = subject, role
g = _, _

[policy_effect]
# Define the policy effect (allow or deny)
# Grants access if at least one policy matches and its effect is allow.
e = some(where (p.eft == allow))

[matchers]
# Use when: enforcer.AddPolicy("admin", "/v1/reviews")
m = g(r.sub, p.sub) && r.obj == p.obj

# Note
# 
# Request Definition
# sub: The subject (e.g., user or role).
# obj: The object (e.g., resource or route).
# act: The action (e.g., read, write, delete).
# Example:
# sub := "admin"  // Subject
# obj := "/admin" // Object
# act := "GET"    // Action
#
# Policy Definition
# p: Defines the relationship between subject, object, and action.
# p, admin, /admin, GET
# p, user, /profile, GET
#
# Role Definition
# g: Maps users to roles or roles to other roles.
# g, alice, admin
# g, bob, user